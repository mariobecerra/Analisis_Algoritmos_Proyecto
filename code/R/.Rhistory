valores <- rnorm(10)
valores_fin <- c(valores, rep(0, 1000 - length(valores)))
for(i in 101:1000){
valores_fin[i] <- 0.3 + 0.4*valores[i - 1] - 0.7*valores[i - 2] + 0.6*valores[i - 1]
}
datos1 <- tibble(ix = 1:1000,
valor = valores_fin)
ix <- sample(1:1000, 200)
datos2 <- datos1
datos2$valor[ix] <- 0
datos1 %>%
ggplot(aes(ix, valor)) +
geom_point() +
geom_line()
tail(valores_fin)
for(i in 101:1000){
valores_fin[i] <- 0.3 + 0.4*valores_fin[i - 1] - 0.7*valores_fin[i - 2] + 0.6*valores_fin[i - 1]
}
tail(valores_fin)
datos1 <- tibble(ix = 1:1000,
valor = valores_fin)
ix <- sample(1:1000, 200)
datos2 <- datos1
datos2$valor[ix] <- 0
datos1 %>%
ggplot(aes(ix, valor)) +
geom_point() +
geom_line()
library(microbenchmark)
for(i in 1:10000) {
valores[i] <- rnorm(1)
}
for(i in 1:10000) {
prueba1[i] <- rnorm(1)
}
prueba1 <- 0
for(i in 1:10000) {
prueba1[i] <- rnorm(1)
}
microbenchmark(
prueba1 <- 0
for(i in 1:10000) {
prueba1[i] <- i
}
)
microbenchmark(
prueba2 <- rep(0, 10000)
for(i in 1:10000) {
prueba2[i] <- i
}
)
microbenchmark(
prueba1 <- 0
for(i in 1:10000) {
prueba1[i] <- i
}
)
microbenchmark({
prueba1 <- 0
for(i in 1:10000) {
prueba1[i] <- i
}
}
)
microbenchmark({
prueba2 <- rep(0, 10000)
for(i in 1:10000) {
prueba2[i] <- i
}
})
microbenchmark({
prueba3 <- 0
for(i in 1:10000) {
prueba3 <- c(prueba3, i)
}
})
microbenchmark({
prueba2 <- rep(0, 10000)
for(i in 1:10000) {
prueba2[i] <- i
}
})
microbenchmark({
prueba2 <- rep(0, 10000)
sapply(i in 1:10000, function(i) {
prueba2[i] <- i
})
})
microbenchmark({
prueba2 <- rep(0, 10000)
sapply(1:10000, function(i) {
prueba2[i] <- i
})
})
microbenchmark({
sapply(1:10000, function(i) {
return(i)
})
})
microbenchmark({
prueba2 <- rep(0, 10000)
for(i in 1:10000) {
prueba2[i] <- i
}
})
microbenchmark({
prueba3 <- sapply(1:10000, function(i) {
return(i)
})
})
sum(prueba2 == prueba3)
valores_fin <- diffinv(rnorm(999))
datos1 <- tibble(ix = 1:1000,
valor = valores_fin)
View(datos1)
?diffinv
ix <- sample(1:1000, 200)
datos2 <- datos1
datos2$valor[ix] <- 0
datos1 %>%
ggplot(aes(ix, valor)) +
geom_point() +
geom_line()
datos2 %>%
ggplot(aes(ix, valor)) +
geom_point() +
geom_line()
install.packages("imputeTS")
library(imputeTS)
datos_interpolados <- datos2 %>%
mutate(valor_na = ifelse(valor == 0, NA, valor)) %>%
mutate(valor_interp = na.interpolation(valor_na))
datos_interpolados %>%
ggplot(aes(ix, valor)) +
geom_point() +
geom_line()
View(datos_interpolados)
datos_interpolados %>%
ggplot(aes(ix, valor_interp)) +
geom_point() +
geom_line()
datos1 %>%
ggplot(aes(ix, valor)) +
geom_point() +
geom_line()
library(tidyverse)
set.seed(124362)
i = 1
tibble(a = rnorm(1000)) %>%
rename_(.dots = list(paste0("var", i) = "a"))
?setNames
setNames( 1:3, c("foo", "bar", "baz") )
datos <- lapply(1:5, function(i) {
tibble(a = rnorm(1000)) %>%
rename_(.dots = setNames("a", paste0("var", i)))
}) %>%
bind_cols()
PCA_datos <- princomp(datos)
PCA_datos$loadings
fac_anal <- factanal(datos, factors = 1)
fac_anal$loadings
PCA_datos$loadings
prcomp(datos)
?scale
PCA_2_datos <- prcomp(datos)
PCA_2_datos$rotation
PCA_datos$sdev
PCA_datos
PCA_datos$loadings
PCA_2_datos$center
PCA_2_datos$scale
scale(datos, PCA_2_datos$center, PCA_2_datos$scale) %*% PCA_2_datos$rotation
scale(datos, PCA_2_datos$center, PCA_2_datos$scale) %*% PCA_2_datos$rotation %>%
as_tibble()
datos
PCA_2_datos$x %>% as_tibble()
?svd
?sgd()
svd(datos, nv = 1)
aa <- svd(datos, nv = 1)
aa$u %>% dim()
aa <- svd(datos, nv = 1, nu = 1)
aa
aa$u %*% aa$v %>% head
(aa$u %*% aa$v) %>% head
(aa$u %*% aa$d %*% aa$v) %>% head
(aa$u %*% aa$d %*% t(aa$v)) %>% head
(aa$u %*% diag(aa$d) %*% t(aa$v)) %>% head
aa$d
(aa$u %*% diag(aa$d) %*% (aa$v)) %>% head
aa$u %>% dim
(aa$u %*% aa$d %*% aa$v) %>% head
head(datos)
aa$d %>% dim()
aa$d %>% head()
aa$u %>% head()
(aa$u %*% aa$d[1] %*% aa$v) %>% head
(aa$u %*% aa$v) %>% head
(aa$u %*% t(aa$v)) %>% head
aa$d[1]*(aa$u %*% t(aa$v)) %>% head
head(datos)
aa$d[1]*(aa$u %*% t(aa$v)) - datos
aa$d[1]*(aa$u %*% t(aa$v)) - datos %>% unlist() %>% qplot()
aa$d[1]*(aa$u %*% t(aa$v)) - datos %>% unlist()
(aa$d[1]*(aa$u %*% t(aa$v)) - datos) %>% unlist()
(aa$d[1]*(aa$u %*% t(aa$v)) - datos) %>% unlist() %>% qplot()
datos %*% t(datos)
as.matrix(datos) %*% as.matrix(t(datos))
chol(as.matrix(datos) %*% as.matrix(t(datos)))
chol(as.matrix(datos) %*% t(as.matrix(datos)))
cov(datos)
chol(cov(datos))
datos_scale <- scale(datos)
datos_scale %>% head
datos_scale %>% sapply(mean)
datos_scale %>% apply(mean, 2)
datos_scale %>% apply(MARGIN = 2, mean)
X <- scale(datos)
SVD_X <- svd(X)
U = SVD_X$u
S = diag(SVD_X$d)
S
U
V = SVD_X$v
C = X %*% t(X)
head(C)
C = t(X) %*% X
head(C)
cov(X)
10.5/999
C = cov(X)
SVD_C = svd(C)
SVD_C$u
SVD_C$v
V
L = diag(SVD_C$d)
L
L = diag(-SVD_C$d)
L
V %*% L %*% t(L)
C
V %*% L %*% t(V)
L = diag(SVD_C$d)
V %*% L %*% t(V)
C
head(U %*% S %*% t(V))
head(X)
U %*% t(U)
cov(rnorm(6))
rnorm(6)
V
eigen(C)
PCA_2_datos$rotation
PCA_datos_scale <- prcomp(X)
PCA_datos_scale$rotation
PCA_datos_scale$rotation - PCA_2_datos
PCA_datos_scale$rotation - PCA_2_datos$rotation
U[1,]
U
S[[1]]
S[[1, 2]]
S[[1, 1]]
U[,1] %*% S[[1, 1]] %*% t(V[,1])
S[[1, 1]] * U[,1] %*% t(V[,1])
(S[[1, 1]] * U[,1] %*% t(V[,1])) - X
((S[[1, 1]] * U[,1] %*% t(V[,1])) - X) %>% class()
((S[[1, 1]] * U[,1] %*% t(V[,1])) - X) %>% unlist()
((S[[1, 1]] * U[,1] %*% t(V[,1])) - X) %>% unlist() %>% dim()
((S[[1, 1]] * U[,1] %*% t(V[,1])) - X) %>% as.matrix()
((S[[1, 1]] * U[,1] %*% t(V[,1])) - X) %>% unclass()
((S[[1, 1]] * U[,1] %*% t(V[,1])) - X) %>% unlist()
((S[[1, 1]] * U[,1] %*% t(V[,1])) - X) %>% unlist() %>% class()
((S[[1, 1]] * U[,1] %*% t(V[,1])) - X) %>% as.vector()
((S[[1, 1]] * U[,1] %*% t(V[,1])) - X) %>% as.vector() %>% qplot()
X %>% as.vector() %>% qplot()
((S[[1, 1]] * U[,1] %*% t(V[,1])) ) %>% as.vector() %>% qplot()
heatmap(X)
X %>% as_tibble()
X %>% as_tibble() %>% gather(key, value) %>% ggplot() + geom_tile(aes())
X %>% as_tibble() %>% gather(key, value) %>% ggplot() + geom_tile(aes(key, value))
X %>% as_tibble() %>% gather(key, value) %>% ggplot() + geom_tile(aes(key, fill = value))
?geom_tile
X %>% as_tibble() %>% gather(key, value)
X %>% as_tibble() %>% mutate(ix = 1:nrow(.)) %>% gather(key, value, 1:(ncol(.)-1) %>% ggplot() + geom_tile(aes(key, ix, fill = value))
X %>% as_tibble() %>% mutate(ix = 1:nrow(.)) %>% gather(key, value, 1:(ncol(.)-1)) %>% ggplot() + geom_tile(aes(key, ix, fill = value))
(S[[1, 1]] * U[,1] %*% t(V[,1]))%>% as_tibble() %>% mutate(ix = 1:nrow(.)) %>% gather(key, value, 1:(ncol(.)-1)) %>% ggplot() + geom_tile(aes(key, ix, fill = value))
PCA_2_datos$rotation
PCA_2_datos$sdev
PCA_datos$loadings
scale(datos, PCA_2_datos$center, PCA_2_datos$scale) %*% PCA_2_datos$rotation %>%
as_tibble()
datos
PCA_datos$scores %>% as_tibble()
calis <- read.table("~/Desktop/cals_inv.tsv")
head(calis)
calis <- read.table("~/Desktop/cals_inv.tsv", sep = "|")
head(calis)
library(tidyverse)
calis %>%
gather(V3:V4)
calis %>%
gather(key, value, V3:V4)
calis %>%
gather(key, value, V3:V5)
calis %>%
gather(key, value, V3:V5) %>%
select(V1 = ix, V2 = persona_califica
)
calis %>%
gather(key, value, V3:V5) %>%
select(ix_califica = V1, persona_califica = V2, ix_calificado = value)
calis %>%
gather(key, value, V3:V5) %>%
select(ix_califica = V1, persona_califica = V2, ix_calificado = value) %>%
arrange(ix_califica)
largo <- calis %>%
gather(key, value, V3:V5) %>%
select(ix_califica = V1, persona_califica = V2, ix_calificado = value) %>%
arrange(ix_califica)
largo %>%
left_join(largo, by = c("ix_califica" = "ix_calificado"))
largo %>%
select(ix_califica, persona_califica) %>%
unique() %>%
left_join(largo, by = c("ix_califica" = "ix_calificado"))
largo %>%
select(ix_califica, persona_califica) %>%
unique() %>%
left_join(largo, by = c("ix_califica" = "ix_calificado")) %>%
select(persona_califica = persona_califica.x,
persona_calificada = persona_califica.y)
largo %>%
select(ix_califica, persona_califica) %>%
unique() %>%
left_join(largo, by = c("ix_califica" = "ix_calificado")) %>%
select(persona_califica = persona_califica.y,
persona_calificada = persona_califica.x)
read.table("0|Fernanda Mora:|15|6|17
1|Walter Marti≠nez:|4|16|17
2|Carlos Urteaga:|13|17|12
3|Hugo Huipet:|2|10|14
4|Luis Rom√É¬°n:|7|11|14
5|Tania Mendoza:|2|3|4
6|Juan Zinser:|16|11|13
7|Luis Ramos:|0|11|12
8|Mario Becerra:|3|5|18
9|Alejandro Coronado:|0|1|14
10|Farid Fajardo:|4|7|8
11|Eduardo Mart√É≠nez:|0|1|8
12|Fernando Gardu√É¬±o:|9|13|15
13|Daniel Hern√É¬°ndez:|12|15|18
14|Ivan Buezo:|2|6|9
15|Rodrigo Medina:|9|16|18
16|Joaqu√É≠n Popoca:|3|6|10
17|Miguel Vilchis:|5|8|10
18|Alvaro Soto:|1|5|7
", sep = '|')
largo
final <- largo %>%
select(ix_califica, persona_califica) %>%
unique() %>%
left_join(largo, by = c("ix_califica" = "ix_calificado")) %>%
select(persona_califica = persona_califica.y,
persona_calificada = persona_califica.x)
View(final)
View(calis)
final
A = rnorm(100)
X = A %*% t(A)
chol(X)
A = rnorm(100, ncol = 10)
A = matrix(rnorm(100), ncol = 10)
X = A %*% t(A)
chol(X)
final
final %>% arrange(persona_califica)
final
library(Rcpp)
quit("n")
quit("no")
library(tidyverse)
canciones <- read_tsv("/home/mario/Desktop/userid-timestamp-artid-artname-traid-traname.tsv", col_names = F)
sum(is.na(canciones$X3))
head(canciones) %>% View
head(canciones, 1000) %>% View
sum(is.na(canciones$X5))
canciones %>%
filter(!is.na(X5)) %>%
select(X4, X5, X6)
canciones_unicas <- canciones %>%
filter(!is.na(X5)) %>%
select(X4, X5, X6) %>%
unique(.)
head(cancion)
head(canciones_unicas)
head(canciones_unicas, 1000) %>% View
canciones_unicas <- canciones_unicas %>% arrange(X4)
head(canciones_unicas, 1000) %>% View
canciones_unicas %>% filter(grepl("Metal", X4, fixed = T)) %>% View
setwd("~/Dropbox/Mario/Escuela/ITAM/MCC/Analisis_de_algoritmos/Proyecto/code/R")
write_tsv(canciones_unicas,
"../../data/canciones_unicas.tsv",
col_names = F)
rm(canciones)
gc()
grep("Metallica", canciones_unicas$X4) %>% head
lalala <- read_tsv("../../data/canciones_unicas.tsv")
rm(lalala)
gc()
canciones <- read_tsv("../../data/canciones_unicas.tsv",
col_names = F, n_max = 10)
head(canciones)
canciones <- read_tsv("../../data/canciones_unicas.tsv",
col_names = c("Artist", "UUID", "Song"))
rm(canciones_unicas)
head(canciones)
canciones %>%
filter(grepl("Metallica", Artist))
canciones_rhcp <- canciones %>%
filter(grepl(" Red Hot Chil", Artist))
canciones_metallica <- canciones %>%
filter(grepl("Metallica", Artist))
canciones_rhcp <- canciones %>%
filter(grepl("Red Hot Chil", Artist))
View(canciones_rhcp)
ea42a36a-ced7-4326-a7d3-c91456b49d0b
sort(canciones$UUID) %>% tail()
trackMap <- read_tsv("../../data/trackMap.tsv")
head(trackMap)
trackMap <- read_tsv("../../data/trackMap.tsv",
col_names = c("new_id", "UUID"))
head(trackMap)
canciones_metallica <- canciones %>%
filter(grepl("Metallica", Artist))
canciones <- canciones %>% inner_join(trackMap)
canciones <- read_tsv("../../data/canciones_unicas.tsv",
col_names = c("Artist", "UUID", "Song"))
head(canciones)
canciones %>% arrange(UUID) %>% View
head(trackMap)
canciones <- read_tsv("../../data/userid-timestamp-artid-artname-traid-traname.tsv", col_names = F)
canciones_unicas <- canciones %>%
#filter(!is.na(X5)) %>%
select(X4, X5, X6) %>%
unique(.) %>%
arrange(X4)
canciones <- read_tsv("../../data/lastfm-dataset-1K/userid-timestamp-artid-artname-traid-traname.tsv", col_names = F)
canciones_unicas <- canciones %>%
head(canciones)
head(canciones, 1000) %>% View
View(trackMap)
grep("00010eb3-ebfe-4965-81ef-0ac64cd49fde", canciones$X5)
a <- grep("00010eb3-ebfe-4965-81ef-0ac64cd49fde", canciones$X5)
a
a <- grep("00010eb3-ebfe-4965-81ef-0ac64cd49fde", canciones$X3)
canciones[a,]
View(canciones[a,])
a <- grep("00011101-560b-4c98-8cec-60b545a160b5", canciones$X3)
a <- grep("00011101-560b-4c98-8cec-60b545a160b5", canciones$X5)
grep("0001cd84-2a11-4699-8d6b-0abf969c5f06", canciones$X3)
a <- grep("0001cd84-2a11-4699-8d6b-0abf969c5f06", canciones$X3)
View(canciones[a,])
View(canciones_metallica)
canciones %>% filter(grep("Metallica", X3)) %>% select(X3, X4, X5, X6) %>% unique()
canciones %>% filter(grepl("Metallica", X3)) %>% select(X3, X4, X5, X6) %>% unique()
head(canciones)
canciones %>% filter(grepl("Metallica", X4)) %>% select(X3, X4, X5, X6) %>% unique()
artistas_unicos <- canciones %>%
select(X3, X4) %>%
unique(.) %>%
arrange(X4)
head(artistas_unicos, 1000) %>% View
write_tsv(artistas_unicos,
"../../data/artistas_unicos.tsv",
col_names = F)
artistas_unicos <- canciones %>%
select(UUID = X3, Artist = X4) %>%
unique(.) %>%
left_join(trackMap)
head(artistas_unicos)
artistas_unicos <- canciones %>%
select(UUID = X3, Artist = X4) %>%
unique(.) %>%
arrange(Artist) %>%
left_join(trackMap)
head(artistas_unicos)
write_tsv(artistas_unicos,
"../../data/artistas_unicos.tsv",
col_names = F)
artistas_unicos %>% grepl("Metalli", Artist)
artistas_unicos %>% filter(Artist == "Metallica")
artistas_unicos %>% filter(UUID == "15064")
artistas_unicos %>% filter(new_id == "15064")
artistas_unicos %>% filter(grepl("Doors", Artist))
artistas_parecidos_metallica <- read_tsv("../../data/artistas_parecidos_metallica.tsv")
artistas_parecidos_metallica <- read_tsv("../../data/artistas_parecidos_metallica.tsv", col_names = c("Artist_1", "new_id", "sim"))
artistas_parecidos_metallica %>%
left_join(trackMap)
left_join(trackMap) %>% View
artistas_parecidos_metallica %>%
left_join(trackMap) %>%
View
artistas_parecidos_metallica %>%
left_join(artistas_unicos) %>%
View
artistas_parecidos_metallica %>%
left_join(artistas_unicos) %>%
select(Artist, sim) %>%
arrange(desc(sim))
artistas_unicos %>% filter(grepl("Doors", Artist)) %>% View
artistas_unicos %>% filter(grepl("Doors", Artist)) %>% View
gc()
